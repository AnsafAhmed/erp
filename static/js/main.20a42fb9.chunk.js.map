{"version":3,"sources":["logo.svg","pages/Home.js","pages/AddProduct.js","components/SideNavigation.js","pages/OrdersBilling.js","pages/Products.js","pages/Settings.js","store/actions/SettingsAction.js","App.js","reportWebVitals.js","theme/theme.js","store/reducers/SettingsReducer.js","store/config/configureStore.js","index.js"],"names":["makeStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","useStyles","formControl","margin","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","sizes","currencies","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","connect","state","currency","settings","props","classes","useTheme","history","useHistory","React","useState","selectedSizes","setSelectedSizes","Paper","elevation","css","Grid","container","item","justifyContent","Button","variant","color","onClick","push","xs","TextField","fullWidth","id","label","InputProps","startAdornment","InputAdornment","position","Select","labelId","multiple","value","onChange","event","target","input","OutlinedInput","renderValue","selected","className","map","Chip","MenuItem","SideNavigation","Drawer","paper","Toolbar","List","text","index","to","ListItem","button","ListItemText","primary","Divider","OrdersBilling","title","Products","handleClick","options","customToolbar","Tooltip","IconButton","dispatch","setCurrency","type","payload","InputLabel","e","Input","App","CssBaseline","AppBar","Typography","noWrap","path","component","AddProduct","Settings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","main","secondary","initialState","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","settingsReducer","applyMiddleware","thunk","subscribe","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.20a42fb9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles, Toolbar } from '@material-ui/core';\nimport React from 'react';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nconst Home = () => {\n    const classes = useStyles();\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div>\n            {/* <Drawer\n                variant=\"permanent\"\n            >\n                <Toolbar />\n                <div >\n                    <List>\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer> */}\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <Toolbar />\n                <div className={classes.drawerContainer}>\n                    <List>\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n        </div>\n    );\n};\n\nexport default Home;","import { Button } from '@material-ui/core';\nimport { Chip, FormControl, Grid, Input, InputLabel, makeStyles, MenuItem, OutlinedInput, Select, TextField, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Paper } from '@material-ui/core';\nimport { InputAdornment } from '@material-ui/core';\nimport { Settings } from '@material-ui/icons';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst sizes = [\n    'S',\n    'M',\n    'L',\n    'XL',\n    'XXL',\n    '03XL',\n    '04XL'\n];\n\nexport const currencies = {\n    'INR': '₹',\n    'USD': '$',\n    'EUR': '€',\n    'BTC': '฿',\n    'JPY': '¥'\n\n};\n\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\nconst AddProduct = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const [selectedSizes, setSelectedSizes] = React.useState([]);\n\n\n    const handleChange = (event) => {\n        setSelectedSizes(event.target.value);\n    };\n\n    const handleChangeMultiple = (event) => {\n        const { options } = event.target;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n            if (options[i].selected) {\n                value.push(options[i].value);\n            }\n        }\n        setSelectedSizes(value);\n    };\n\n    return (\n        <Fragment>\n            <Paper elevation={4} css={css`padding: 20px;`} >\n\n                <Grid container spacing={3}>\n                    <Grid item container spacing={3} justifyContent=\"flex-end\">\n                        <Grid item>\n\n                            <Button variant=\"outlined\" color=\"primary\" onClick={() => history.push('/products')} >\n                                Cancel\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"primary\"  >\n                                Confirm\n                            </Button>\n\n                        </Grid>\n\n                    </Grid>\n                    <Grid item container spacing={3} >\n\n                        <Grid item xs={4}>\n                            <TextField fullWidth id=\"name\" label=\"Name\" variant=\"standard\" />\n                        </Grid>\n                        <Grid item xs={4}>\n\n                            <TextField fullWidth id=\"price\" label=\"Price\" InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        {currencies[props.currency]}\n                                    </InputAdornment>\n                                ),\n                            }} />\n                        </Grid>\n                        <Grid item xs={4}>\n                            {/* <InputLabel id=\"sizes-label\">Sizes</InputLabel> */}\n                            <Select\n                                labelId=\"sizes-label\"\n                                id=\"sizes\"\n                                multiple\n                                value={selectedSizes}\n                                onChange={handleChange}\n                                input={<OutlinedInput fullWidth id=\"select-multiple-sizes\" />}\n                                renderValue={(selected) => (\n                                    <div className={classes.chips}>\n                                        {selected.map((value) => (\n                                            <Chip key={value} label={value} className={classes.chip} />\n                                        ))}\n                                    </div>\n                                )}\n                                MenuProps={MenuProps}\n                            >\n                                {sizes.map((name) => (\n                                    <MenuItem key={name} value={name} style={getStyles(name, selectedSizes, theme)}>\n                                        {name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Fragment >\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    currency: state.settings.currency\n});\n\nexport default connect(mapStateToProps, null)(AddProduct);","import { Divider, Drawer, List, ListItem, ListItemText, makeStyles, Toolbar } from '@material-ui/core';\nimport React from 'react';\nimport { NavLink, useHistory, withRouter } from 'react-router-dom';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nconst SideNavigation = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar />\n            <div className={classes.drawerContainer}>\n                <List>\n                    {[['Products', '/products'], ['Orders / Billing', '/ordersbilling']].map((text, index) => (\n                        <NavLink to={text[1]} css={css`\n                        text-decoration: none;\n                        color: initial;`}>\n                            <ListItem button key={text[0]}>\n                                <ListItemText primary={text[0]} />\n                            </ListItem>\n                        </NavLink>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {[['Settings', '/settings']].map((text, index) => (\n                        <NavLink to={text[1]} css={css`\n                        text-decoration: none;\n                        color: initial;`}>\n                            <ListItem button key={text[0]}>\n                                <ListItemText primary={text[0]} />\n                            </ListItem>\n                        </NavLink>\n                    ))}\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nexport default SideNavigation;","import { TextField } from '@material-ui/core';\nimport MUIDataTable from 'mui-datatables';\nimport React from 'react';\n\nconst OrdersBilling = () => {\n    return (\n        <MUIDataTable\n            title=\"Orders / Billing\"\n        >\n\n        </MUIDataTable>\n    );\n};\n\nexport default OrdersBilling;","import { IconButton } from '@material-ui/core';\nimport { Tooltip } from '@material-ui/core';\nimport MUIDataTable from 'mui-datatables';\nimport React from 'react';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useHistory } from 'react-router-dom';\n\nconst Products = () => {\n    const history = useHistory();\n\n    const handleClick = () => {\n        history.push('/addproduct');\n    };\n\n    const options = {\n        customToolbar: () => (\n            <Tooltip title={\"Add Product\"}>\n                <IconButton onClick={handleClick} id=\"addProduct\">\n                    <AddIcon />\n                </IconButton>\n            </Tooltip>\n        )\n    };\n\n    return (\n        <MUIDataTable\n            title=\"Products\"\n            options={options}\n        >\n\n        </MUIDataTable>\n    );\n};\n\nexport default Products;","import { TextField, useTheme } from '@material-ui/core';\nimport { MenuItem } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport React, { useState } from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { InputLabel } from '@material-ui/core';\nimport { setCurrency } from '../store/actions/SettingsAction';\nimport { connect } from 'react-redux';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst currencies = [\n    {\n        value: 'INR',\n        label: '₹',\n    },\n    {\n        value: 'USD',\n        label: '$',\n    },\n    {\n        value: 'EUR',\n        label: '€',\n    },\n    {\n        value: 'BTC',\n        label: '฿',\n    },\n    {\n        value: 'JPY',\n        label: '¥',\n    },\n];\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\nconst Settings = (props) => {\n    const theme = useTheme();\n\n    // const [currency, setCurrency] = useState('INR');\n\n    const handleChange = (e) => {\n        props.setCurrency(e.target.value);\n    }\n\n    return (\n        <Paper elevation={4} css={css`\n        padding: 20px;\n        `}>\n            <Grid container>\n                <Grid item xs={4}>\n                    <InputLabel id=\"currency-label\">Currency</InputLabel>\n                    <Select\n                        labelId=\"currency-label\"\n                        id=\"currency\"\n                        value={props.currency}\n                        onChange={handleChange}\n                        input={<Input fullWidth id=\"select-currency\" />}\n                        // renderValue={(selected) => (\n                        //     <div className={classes.chips}>\n                        //         {selected.map((value) => (\n                        //             <Chip key={value} label={value} className={classes.chip} />\n                        //         ))}\n                        //     </div>\n                        // )}\n                        MenuProps={MenuProps}\n                    >\n                        {currencies.map((currency) => (\n                            <MenuItem key={currency.value} value={currency.value}>\n                                {currency.label}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </Grid>\n\n            </Grid>\n        </Paper>\n    );\n};\n\nconst mapStateToProps = state => ({\n    currency: state.settings.currency\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrency: (currency) => dispatch(setCurrency(currency))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","export const setCurrency = (payload) => ({\n    type: 'SET_CURRENCY',\n    payload\n})","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport { AppBar, CssBaseline, Divider, Drawer, List, ListItem, ListItemText, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport Home from './pages/Home';\nimport AddProduct from './pages/AddProduct';\nimport SideNavigation from './components/SideNavigation';\nimport OrdersBilling from './pages/OrdersBilling';\nimport Products from './pages/Products';\nimport Settings from './pages/Settings';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst App = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n\n  return (\n\n\n\n    <BrowserRouter >\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap>\n              Kurta Company\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <SideNavigation />\n        <main className={classes.content}>\n          <Toolbar />\n\n          <Switch>\n            {/* <Route path=\"/\" component={Home} /> */}\n\n            <Route path=\"/ordersbilling\" component={OrdersBilling} />\n            <Route path=\"/addproduct\" component={AddProduct} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/\" component={Products} />\n            {/* <Route path=\"/\" component={Home} /> */}\n          </Switch>\n        </main>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@material-ui/core\";\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: '#1565c0' // customise your main color here\n        },\n        secondary: { main: '#673ab7' },\n    }\n});\n","const initialState = {\n    currency: 'INR'\n\n\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_CURRENCY':\n            return {\n                ...state,\n                currency: action.payload\n            }\n        default:\n            return state;\n    }\n}","import thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n// import authReducer from '../reducers/auth';\n// import simpleSearchReducer from '../reducers/simpleSearchReducers';\n// import caseDetailsReducer from '../reducers/caseDetailsReducer';\nimport settingsReducer from '../reducers/SettingsReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            // auth: authReducer,\n            // simpleSearch: simpleSearchReducer,\n            // caseDetails: caseDetailsReducer\n            settings: settingsReducer\n        }),\n        composeEnhancers(applyMiddleware(thunk))\n    );\n\n    return store;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './theme/theme';\nimport configureStore from './store/config/configureStore';\nimport { Provider } from 'react-redux';\n\nexport const store = configureStore();\nstore.subscribe(() => { });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n\n      <ThemeProvider theme={theme}>\n\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}